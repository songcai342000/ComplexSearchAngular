{"ast":null,"code":"import 'zone.js/node';\nimport { APP_BASE_HREF } from '@angular/common';\nimport { ngExpressEngine } from '@nguniversal/express-engine';\nimport * as express from 'express';\nimport { existsSync } from 'node:fs';\nimport { join } from 'node:path';\nimport { AppServerModule } from './src/app/app.server.module';\n//import { AppServerModule } from './src/main.server';\n// The Express app is exported so that it can be used by serverless Functions.\nexport function app() {\n  const server = express();\n  const distFolder = join(process.cwd(), 'dist');\n  const indexHtml = existsSync(join(distFolder, 'index.original.html')) ? 'index.original.html' : 'index';\n  // Our Universal express-engine (found @ https://github.com/angular/universal/tree/main/modules/express-engine)\n  server.engine('html', ngExpressEngine({\n    bootstrap: AppServerModule\n  }));\n  server.set('view engine', 'html');\n  server.set('views', distFolder);\n  // Example Express Rest API endpoints\n  // server.get('/api/**', (req, res) => { });\n  // Serve static files from /browser\n  server.get('*.*', express.static(distFolder, {\n    maxAge: '1y'\n  }));\n  // All regular routes use the Universal engine\n  server.get('*', (req, res) => {\n    res.render(indexHtml, {\n      req,\n      providers: [{\n        provide: APP_BASE_HREF,\n        useValue: req.baseUrl\n      }]\n    });\n  });\n  return server;\n}\nfunction run() {\n  const port = process.env['PORT'] || 4000;\n  // Start up the Node server\n  const server = app();\n  server.listen(port, () => {\n    console.log(`Node Express server listening on http://localhost:${port}`);\n  });\n}\nconst mainModule = __non_webpack_require__.main;\nconst moduleFilename = mainModule && mainModule.filename || '';\nif (moduleFilename === __filename || moduleFilename.includes('iisnode')) {\n  run();\n}\n//export * from './src/main.server';\nexport * from './src/app/app.server.module';","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}