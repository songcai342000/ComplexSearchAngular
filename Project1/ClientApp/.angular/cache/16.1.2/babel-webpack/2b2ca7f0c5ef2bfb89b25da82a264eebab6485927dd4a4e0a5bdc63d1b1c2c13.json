{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let SearchService = /*#__PURE__*/(() => {\n  class SearchService {\n    constructor(http) {\n      this.http = http;\n    }\n    findExactMatches(searchCondition) {\n      var condition = this.findCondition(searchCondition);\n      if (searchCondition.music != '' && searchCondition.sport != '') {\n        return this.http.get('api/Articles/FindMusicSportExactMatches/' + condition);\n      } else if (searchCondition.music != '' && searchCondition.sport == '') {\n        alert(2);\n        return this.http.get('api/Articles/FindMusicExactMatches/' + condition);\n      }\n      /*else if (searchCondition.music == '' && searchCondition.sport != '') {\r\n        return this.http.get<Article[]>('api/Articles/FindSportExactMatches/' + condition);\r\n      }*/\n      return this.http.get('api/Articles/FindSportExactMatches/' + condition);\n    }\n    findFusionMatches(searchCondition) {\n      let condition = this.findCondition(searchCondition);\n      if (searchCondition.music != null && searchCondition.sport != null) {\n        return this.http.get('api/Articles/FindMusicSportFusionMatches/' + condition);\n      } else if (searchCondition.music != null && searchCondition.sport == null) {\n        return this.http.get('api/Articles/FindMusicFusionMatches/' + condition);\n      }\n      /*else if (searchCondition.music == null && searchCondition.sport != null) {\r\n        return this.http.get<Article[]>('api/Articles/FindSportFusionMatches/' + condition);\r\n      }*/\n      return this.http.get('api/Articles/FindSportFusionMatches/' + condition);\n    }\n    findCondition(searchCondition) {\n      if (searchCondition.female == '') {\n        searchCondition.female = \"undefined\";\n      }\n      if (searchCondition.male == '') {\n        searchCondition.male = \"undefined\";\n      }\n      let condition = searchCondition.female + \"/\" + searchCondition.male + \"/\" + searchCondition.period + \"/\" + searchCondition.searchTerm;\n      return condition;\n    }\n  }\n  SearchService.ɵfac = function SearchService_Factory(t) {\n    return new (t || SearchService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  SearchService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SearchService,\n    factory: SearchService.ɵfac,\n    providedIn: 'root'\n  });\n  return SearchService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}