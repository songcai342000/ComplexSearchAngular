{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet SearchDashboardComponent = class SearchDashboardComponent {\n  constructor(articleService) {\n    this.articleService = articleService;\n  }\n  ngOnInit() {}\n  onemitSearchCondition(formGroup) {\n    this.searchCondition = {\n      searchTerm: formGroup.get('searchTerm')?.value,\n      music: formGroup.get('music')?.value,\n      sport: formGroup.get('sport')?.value,\n      checkCategories: formGroup.get('checkCategories')?.value,\n      female: formGroup.get('female')?.value,\n      male: formGroup.get('male')?.value,\n      checkGroups: formGroup.get('checkGroups')?.value,\n      period: formGroup.get('period')?.value,\n      termMatch: formGroup.get('termMatch')?.value\n    };\n    if (this.searchCondition.termMatch == 'match exactly') {\n      this.articleService.findExactMatches(this.searchCondition).subscribe(articles => this.articles = articles);\n    } else if (this.searchCondition.termMatch == 'allow fusion') {\n      this.articleService.findFusionMatches(this.searchCondition).subscribe(articles => this.articles = articles);\n    }\n  }\n};\nSearchDashboardComponent = __decorate([Component({\n  selector: 'app-search-dashboard',\n  templateUrl: './search-dashboard.component.html',\n  styleUrls: ['./search-dashboard.component.css']\n  //changeDetection: ChangeDetectionStrategy.OnPush\n})], SearchDashboardComponent);\nexport { SearchDashboardComponent };","map":{"version":3,"names":["Component","SearchDashboardComponent","constructor","articleService","ngOnInit","onemitSearchCondition","formGroup","searchCondition","searchTerm","get","value","music","sport","checkCategories","female","male","checkGroups","period","termMatch","findExactMatches","subscribe","articles","findFusionMatches","__decorate","selector","templateUrl","styleUrls"],"sources":["F:\\repos\\ComplexSearchAngular\\Project1\\ClientApp\\src\\app\\search-dashboard\\search-dashboard.component.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Article } from '../models/article';\r\nimport { SearchCondition } from '../models/searchCondition';\r\nimport { SearchService } from '../Services/search.service';\r\n\r\n@Component({\r\n  selector: 'app-search-dashboard',\r\n  templateUrl: './search-dashboard.component.html',\r\n  styleUrls: ['./search-dashboard.component.css']\r\n  //changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SearchDashboardComponent implements OnInit {\r\n\r\n  articles: Article[] | undefined;\r\n  searchCondition: SearchCondition | undefined;\r\n  constructor(private articleService: SearchService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onemitSearchCondition(formGroup: FormGroup): void {\r\n    this.searchCondition = {\r\n      searchTerm: formGroup.get('searchTerm')?.value, music: formGroup.get('music')?.value,\r\n      sport: formGroup.get('sport')?.value, checkCategories: formGroup.get('checkCategories')?.value, female: formGroup.get('female')?.value, male: formGroup.get('male')?.value, checkGroups: formGroup.get('checkGroups')?.value, period: formGroup.get('period')?.value, termMatch: formGroup.get('termMatch')?.value\r\n    };\r\n    if (this.searchCondition.termMatch == 'match exactly') {\r\n      this.articleService.findExactMatches(this.searchCondition).subscribe(articles => this.articles = articles);\r\n    }\r\n    else if (this.searchCondition.termMatch == 'allow fusion') {\r\n      this.articleService.findFusionMatches(this.searchCondition).subscribe(articles => this.articles = articles);\r\n    }\r\n  }\r\n\r\n\r\n}\r\n"],"mappings":";AAAA,SAAkCA,SAAS,QAAgB,eAAe;AAYnE,IAAMC,wBAAwB,GAA9B,MAAMA,wBAAwB;EAInCC,YAAoBC,cAA6B;IAA7B,KAAAA,cAAc,GAAdA,cAAc;EAAmB;EAErDC,QAAQA,CAAA,GACR;EAEAC,qBAAqBA,CAACC,SAAoB;IACxC,IAAI,CAACC,eAAe,GAAG;MACrBC,UAAU,EAAEF,SAAS,CAACG,GAAG,CAAC,YAAY,CAAC,EAAEC,KAAK;MAAEC,KAAK,EAAEL,SAAS,CAACG,GAAG,CAAC,OAAO,CAAC,EAAEC,KAAK;MACpFE,KAAK,EAAEN,SAAS,CAACG,GAAG,CAAC,OAAO,CAAC,EAAEC,KAAK;MAAEG,eAAe,EAAEP,SAAS,CAACG,GAAG,CAAC,iBAAiB,CAAC,EAAEC,KAAK;MAAEI,MAAM,EAAER,SAAS,CAACG,GAAG,CAAC,QAAQ,CAAC,EAAEC,KAAK;MAAEK,IAAI,EAAET,SAAS,CAACG,GAAG,CAAC,MAAM,CAAC,EAAEC,KAAK;MAAEM,WAAW,EAAEV,SAAS,CAACG,GAAG,CAAC,aAAa,CAAC,EAAEC,KAAK;MAAEO,MAAM,EAAEX,SAAS,CAACG,GAAG,CAAC,QAAQ,CAAC,EAAEC,KAAK;MAAEQ,SAAS,EAAEZ,SAAS,CAACG,GAAG,CAAC,WAAW,CAAC,EAAEC;KAC9S;IACD,IAAI,IAAI,CAACH,eAAe,CAACW,SAAS,IAAI,eAAe,EAAE;MACrD,IAAI,CAACf,cAAc,CAACgB,gBAAgB,CAAC,IAAI,CAACZ,eAAe,CAAC,CAACa,SAAS,CAACC,QAAQ,IAAI,IAAI,CAACA,QAAQ,GAAGA,QAAQ,CAAC;KAC3G,MACI,IAAI,IAAI,CAACd,eAAe,CAACW,SAAS,IAAI,cAAc,EAAE;MACzD,IAAI,CAACf,cAAc,CAACmB,iBAAiB,CAAC,IAAI,CAACf,eAAe,CAAC,CAACa,SAAS,CAACC,QAAQ,IAAI,IAAI,CAACA,QAAQ,GAAGA,QAAQ,CAAC;;EAE/G;CAGD;AAvBYpB,wBAAwB,GAAAsB,UAAA,EANpCvB,SAAS,CAAC;EACTwB,QAAQ,EAAE,sBAAsB;EAChCC,WAAW,EAAE,mCAAmC;EAChDC,SAAS,EAAE,CAAC,kCAAkC;EAC9C;CACD,CAAC,C,EACWzB,wBAAwB,CAuBpC;SAvBYA,wBAAwB"},"metadata":{},"sourceType":"module","externalDependencies":[]}