{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { isDevMode } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\nimport { HomeComponent } from './home/home.component';\nimport { CounterComponent } from './counter/counter.component';\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\nimport { InterceptorProviders } from './Services/interceptor-index';\nimport { AppRoutingModule } from './app-routing.module';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { PromptUpdateComponent } from './updateMessages/prompt-update/prompt-update.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nimport * as i2 from \"@angular/service-worker\";\nexport class AppModule {}\nAppModule.ɵfac = function AppModule_Factory(t) {\n  return new (t || AppModule)();\n};\nAppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: AppModule,\n  bootstrap: [AppComponent]\n});\nAppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  providers: [InterceptorProviders],\n  imports: [BrowserModule.withServerTransition({\n    appId: 'ng-cli-universal'\n  }), HttpClientModule, ReactiveFormsModule, AppRoutingModule, ServiceWorkerModule.register('ngsw-worker.js', {\n    enabled: !isDevMode(),\n    // Register the ServiceWorker as soon as the application is stable\n    // or after 30 seconds (whichever comes first).\n    registrationStrategy: 'registerWhenStable:30000'\n  })]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [NavMenuComponent, CounterComponent, HomeComponent, FetchDataComponent, AppComponent, PromptUpdateComponent],\n    imports: [i1.BrowserModule, HttpClientModule, ReactiveFormsModule, AppRoutingModule, i2.ServiceWorkerModule]\n  });\n})();","map":{"version":3,"names":["BrowserModule","isDevMode","ReactiveFormsModule","HttpClientModule","AppComponent","NavMenuComponent","HomeComponent","CounterComponent","FetchDataComponent","InterceptorProviders","AppRoutingModule","ServiceWorkerModule","PromptUpdateComponent","AppModule","bootstrap","imports","withServerTransition","appId","register","enabled","registrationStrategy","declarations","i1","i2"],"sources":["F:\\repos\\ComplexSearchAngular\\Project1\\ClientApp\\src\\app\\app.module.ts"],"sourcesContent":["import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, isDevMode } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CounterComponent } from './counter/counter.component';\r\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\nimport { InterceptorProviders } from './Services/interceptor-index';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { PromptUpdateComponent } from './updateMessages/prompt-update/prompt-update.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NavMenuComponent,\r\n    CounterComponent,\r\n    HomeComponent,\r\n    FetchDataComponent,\r\n    AppComponent,\r\n    PromptUpdateComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AppRoutingModule,\r\n    ServiceWorkerModule.register('ngsw-worker.js', {\r\n      enabled: !isDevMode(),\r\n      // Register the ServiceWorker as soon as the application is stable\r\n      // or after 30 seconds (whichever comes first).\r\n      registrationStrategy: 'registerWhenStable:30000'\r\n    })\r\n  ],\r\n  providers: [InterceptorProviders],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,2BAA2B;AACzD,SAAmBC,SAAS,QAAQ,eAAe;AACnD,SAAsBC,mBAAmB,QAAQ,gBAAgB;AACjE,SAASC,gBAAgB,QAAQ,sBAAsB;AAEvD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,gBAAgB,QAAQ,+BAA+B;AAChE,SAASC,aAAa,QAAQ,uBAAuB;AACrD,SAASC,gBAAgB,QAAQ,6BAA6B;AAC9D,SAASC,kBAAkB,QAAQ,mCAAmC;AAEtE,SAASC,oBAAoB,QAAQ,8BAA8B;AACnE,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,mBAAmB,QAAQ,yBAAyB;AAC7D,SAASC,qBAAqB,QAAQ,wDAAwD;;;;AA0B9F,OAAM,MAAOC,SAAS;AAATA,SAAS,C;mBAATA,SAAS;AAAA;AAATA,SAAS,C;QAATA,SAAS;EAAAC,SAAA,GAFRV,YAAY;AAAA;AAEbS,SAAS,C;aAHT,CAACJ,oBAAoB,CAAC;EAAAM,OAAA,GAX/Bf,aAAa,CAACgB,oBAAoB,CAAC;IAAEC,KAAK,EAAE;EAAkB,CAAE,CAAC,EACjEd,gBAAgB,EAChBD,mBAAmB,EACnBQ,gBAAgB,EAChBC,mBAAmB,CAACO,QAAQ,CAAC,gBAAgB,EAAE;IAC7CC,OAAO,EAAE,CAAClB,SAAS,EAAE;IACrB;IACA;IACAmB,oBAAoB,EAAE;GACvB,CAAC;AAAA;;2EAKOP,SAAS;IAAAQ,YAAA,GAtBlBhB,gBAAgB,EAChBE,gBAAgB,EAChBD,aAAa,EACbE,kBAAkB,EAClBJ,YAAY,EACZQ,qBAAqB;IAAAG,OAAA,GAAAO,EAAA,CAAAtB,aAAA,EAIrBG,gBAAgB,EAChBD,mBAAmB,EACnBQ,gBAAgB,EAAAa,EAAA,CAAAZ,mBAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}