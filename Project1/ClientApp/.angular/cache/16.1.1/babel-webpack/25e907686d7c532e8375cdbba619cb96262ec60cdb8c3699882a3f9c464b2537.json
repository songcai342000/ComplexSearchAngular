{"ast":null,"code":"import { throwError, catchError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ErrorInterceptor {\n  constructor() {}\n  intercept(request, next) {\n    return next.handle(request).pipe(catchError(err => {\n      let errorMsg = '';\n      if (err.error instanceof ErrorEvent) {\n        console.log('This is client side error');\n        errorMsg = `Error: ${err.error.message}`;\n      } else {\n        console.log('This is server side error');\n        errorMsg = `Error Code: ${err.status},  Message: ${err.message}`;\n      }\n      console.log(errorMsg);\n      return throwError(() => new Error(\"Something is wrong, please try later\"));\n    }));\n  }\n}\nErrorInterceptor.ɵfac = function ErrorInterceptor_Factory(t) {\n  return new (t || ErrorInterceptor)();\n};\nErrorInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ErrorInterceptor,\n  factory: ErrorInterceptor.ɵfac\n});","map":{"version":3,"names":["throwError","catchError","ErrorInterceptor","constructor","intercept","request","next","handle","pipe","err","errorMsg","error","ErrorEvent","console","log","message","status","Error","factory","ɵfac"],"sources":["F:\\repos\\ComplexSearchAngular\\Project1\\ClientApp\\src\\app\\Services\\error.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\r\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, throwError, catchError } from 'rxjs';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor() {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    return next.handle(request)\r\n      .pipe(\r\n        catchError((err: HttpErrorResponse) => {\r\n          let errorMsg = '';\r\n          if (err.error instanceof ErrorEvent) {\r\n            console.log('This is client side error');\r\n            errorMsg = `Error: ${err.error.message}`;\r\n          } else {\r\n            console.log('This is server side error');\r\n            errorMsg = `Error Code: ${err.status},  Message: ${err.message}`;\r\n          }\r\n          console.log(errorMsg);\r\n          return throwError(() => new Error(\"Something is wrong, please try later\"));\r\n        })\r\n      )\r\n  }\r\n}\r\n"],"mappings":"AAQA,SAAqBA,UAAU,EAAEC,UAAU,QAAQ,MAAM;;AAGzD,OAAM,MAAOC,gBAAgB;EAE3BC,YAAA,GAAe;EAEfC,SAASA,CAACC,OAA6B,EAAEC,IAAiB;IACxD,OAAOA,IAAI,CAACC,MAAM,CAACF,OAAO,CAAC,CACxBG,IAAI,CACHP,UAAU,CAAEQ,GAAsB,IAAI;MACpC,IAAIC,QAAQ,GAAG,EAAE;MACjB,IAAID,GAAG,CAACE,KAAK,YAAYC,UAAU,EAAE;QACnCC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;QACxCJ,QAAQ,GAAG,UAAUD,GAAG,CAACE,KAAK,CAACI,OAAO,EAAE;OACzC,MAAM;QACLF,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;QACxCJ,QAAQ,GAAG,eAAeD,GAAG,CAACO,MAAM,eAAeP,GAAG,CAACM,OAAO,EAAE;;MAElEF,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;MACrB,OAAOV,UAAU,CAAC,MAAM,IAAIiB,KAAK,CAAC,sCAAsC,CAAC,CAAC;IAC5E,CAAC,CAAC,CACH;EACL;;AApBWf,gBAAgB,C;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB,C;SAAhBA,gBAAgB;EAAAgB,OAAA,EAAhBhB,gBAAgB,CAAAiB;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}